// FIXME Comment this
configurations.all {
	// Check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
	repositories {
		// FIXME Comment this
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://repo.grails.org/grails/core" }
		maven { url "https://repo.grails.org/grails/plugins" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
		classpath "org.grails.plugins:hibernate5:8.0.2" // Prev 7.3.0 // FIXME include in upgrade docs
		classpath "org.grails.plugins:views-gradle:3.1.1" // Prev 2.3.2
		classpath 'com.bmuschko:gradle-docker-plugin:6.6.1'
	}
}

final String version_regex = /^(((\d+)\.\d+)\.\d+)(-([a-zA-Z]+(\.\d+)?))?$/
Map<String, String> env = System.getenv();
String calculated_version = null;

// If we are building in a Jenkins environment append the build number onto the snapshot tag
if ( ( appVersion.contains('SNAPSHOT') ) && ( env.BUILD_NUMBER != null ) ) {
	println("Detected snapshot version and build number - appending");
	calculated_version = "${appVersion}.${env.BUILD_NUMBER}".toString()
}
else {
	println("Release version");
	calculated_version = "${appVersion}".toString()
}

version "${calculated_version}"
group "org.olf"

apply plugin: "eclipse"
apply plugin: 'eclipse-wtp'
apply plugin: "idea"
//apply plugin:"war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
apply plugin: 'com.bmuschko.docker-remote-api'

sourceSets {
	main {
		resources {
			srcDir 'grails-app/migrations'
			srcDir 'src/main/okapi/tenant'
		}
	}
}

// https://github.com/grails/grails-core/issues/12181
bootJar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

repositories {
	// FIXME Comment this
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.grails.org/grails/core" }
	maven { url "https://repo.grails.org/grails/plugins" }
	maven { url "https://jitpack.io" }
	maven { url 'https://maven.indexdata.com/' }
	maven { url "https://maven.k-int.com/repository/releases" }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
  /* ---- Grails 6 ---- */
  compileOnly("io.micronaut:micronaut-inject-groovy")
  console("org.grails:grails-console")
	profile "org.grails.profiles:rest-api"

  implementation "org.grails:grails-core"

  implementation "org.grails:grails-logging"
  implementation "org.grails:grails-plugin-databinding"
  implementation "org.grails:grails-plugin-interceptors"
  implementation "org.grails:grails-plugin-rest"
  implementation "org.grails:grails-plugin-services"
  implementation "org.grails:grails-plugin-url-mappings"
  implementation "org.grails:grails-web-boot"
  implementation "org.grails:grails-plugin-codecs"
  implementation "org.grails.plugins:hibernate5"
  implementation "org.grails.plugins:async"
  implementation "org.hibernate:hibernate-core:5.6.15.Final"
	implementation "org.grails.plugins:events"

  implementation "org.grails.plugins:views-json"
  implementation "org.grails.plugins:views-json-templates"

  developmentOnly "org.springframework.boot:spring-boot-autoconfigure"
  developmentOnly "org.springframework.boot:spring-boot-starter-actuator"
  developmentOnly "org.springframework.boot:spring-boot-starter-logging"
  //developmentOnly "org.springframework.boot:spring-boot-starter-validation"

  
  //runtimeOnly("com.h2database:h2")
  runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
  //runtimeOnly("org.apache.tomcat:tomcat-jdbc")
  //runtimeOnly("org.glassfish.web:el-impl:2.2.1-b05")
  testImplementation("io.micronaut:micronaut-inject-groovy")
	
	// These for whatever reason don't work purely with testImplementation anymore
	compileOnly("org.grails:grails-gorm-testing-support")
  compileOnly("org.spockframework:spock-core")

  testImplementation("org.grails:grails-gorm-testing-support")
  //testImplementation("org.grails:views-json-testing-support")
  testImplementation("org.spockframework:spock-core")
  //testImplementation("io.micronaut:micronaut-http-client")

  /*  ---- Manually installed dependencies ---- */
	implementation 'org.grails.plugins:spring-security-core:6.1.1' // FIXME Prev 5.2.1

  // FIXME use released version
	implementation 'com.k_int.grails:web-toolkit-ce:8.1.5-SNAPSHOT'
	//implementation 'com.k_int.okapi:grails-okapi:6.0.0-rc.4'
	// FIXME Use released version
	implementation 'com.k_int.okapi:grails-okapi:6.0.0-SNAPSHOT'

	implementation 'io.github.http-builder-ng:http-builder-ng-core:1.0.4'
	implementation 'org.codehaus.janino:janino:3.1.9'
	implementation "org.springframework.boot:spring-boot-starter-undertow" // Replaces spring-boot-starter-tomcat
	implementation "org.hibernate:hibernate-java8:5.6.15.Final" // FIXME remember to ensure this is in line on grails 6 upgrade docs
	runtimeOnly "com.zaxxer:HikariCP:3.4.5"                             // Replaces Tomcat JDBC pool
	runtimeOnly "org.postgresql:postgresql:42.5.3"

	implementation ('org.grails.plugins:database-migration:5.0.0-SNAPSHOT') {
		exclude group: 'org.liquibase', module: 'liquibase-core'
	}
	implementation 'org.liquibase:liquibase-core:4.19.0' // Prev 4.17.2 -- taken from master of plugin database migration

	implementation 'com.opencsv:opencsv:5.7.1'
	implementation 'commons-io:commons-io:2.6'
	implementation 'io.github.virtualdogbert:logback-groovy-config:1.14.1' // Grails 5 and up no longer supports groovy files for logback config
	compileOnly 'ch.qos.logback:logback-classic:1.4.7'

	/*  ---- Manually installed testing dependencies ---- */
	//implementation "org.grails:grails-gorm-testing-support:2.6.1"
	//implementation "org.grails:grails-web-testing-support:2.6.1"
	implementation "org.grails:grails-web-testing-support"
	testImplementation "org.grails.plugins:geb"
	testImplementation "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
	testImplementation "org.seleniumhq.selenium:selenium-api:3.14.0"
	testImplementation "org.seleniumhq.selenium:selenium-support:3.14.0"
	testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
	testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
	implementation 'org.z3950.zing:cql-java:1.13'

	/* ---- Custom non profile deps ---- */
	implementation 'org.apache.kafka:kafka-clients:2.3.0'
	implementation 'com.github.everit-org.json-schema:org.everit.json.schema:1.14.3'
	// Better test reports.
	testImplementation( 'com.athaydes:spock-reports:2.3.2-groovy-3.0' ) {
		transitive = false // this avoids affecting your version of Groovy/Spock
	}

	// Bumping this manually to avoid potential security issue with spring-webmvc-5.3.25
  // FIXME CHECK SPRING WEBMVC
	//implementation 'org.springframework:spring-webmvc:5.3.28'
}

bootRun {
	ignoreExitValue true
	jvmArgs(
			'-Dspring.output.ansi.enabled=always',
			'-noverify',
			'-XX:TieredStopAtLevel=1',
			'-Xmx1024m')
	sourceResources sourceSets.main
	String springProfilesActive = 'spring.profiles.active'
	systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

/* application {
    mainClass.set("mod.service.interaction.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}
 */
tasks.withType(Test) {
    useJUnitPlatform()
}
